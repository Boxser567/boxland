{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Head from \"next/head\";\nimport Router from \"next/router\";\nimport { Container, Typography, TextField, InputAdornment } from \"@material-ui/core\";\nimport ArrowRightAltIcon from \"@material-ui/icons/ArrowRightAlt\";\nimport fetch from \"../public/js/nextFetch\";\nimport \"../public/css/about.less\";\nexport default function Invitation() {\n  const {\n    0: code,\n    1: setCode\n  } = useState(null);\n  const {\n    0: toast,\n    1: setToast\n  } = useState(null);\n\n  const gInvitationCode = async () => {\n    console.log(code);\n\n    if (code == \"\") {\n      setCode(\"请输入邀请码！\");\n      return;\n    }\n\n    const result = await fetch(`users?code=${code}`);\n\n    if (result.data && result.data.length === 0) {\n      setCode(\"\");\n      setToast(\"请输入正确的邀请码！\");\n    } else {\n      Router.push({\n        pathname: \"/about\",\n        query: {\n          code,\n          uid: result.data[0][\"id\"]\n        }\n      });\n    }\n  };\n\n  const handleKeyup = e => {\n    if (e.keyCode !== 13) return;\n    gInvitationCode();\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"meta\", {\n    \"http-equiv\": \"Content-Security-Policy\",\n    content: \"upgrade-insecure-requests\"\n  }), __jsx(\"title\", null, \"\\u9080\\u8BF7\\u7801\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"/css/common.css\"\n  })), __jsx(\"div\", {\n    className: \"invitation\"\n  }, __jsx(Typography, {\n    component: \"div\",\n    style: {\n      backgroundColor: \"rgb(19, 134, 226)\",\n      height: \"100vh\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\"\n    }\n  }, __jsx(TextField, {\n    id: \"outlined-basic\",\n    label: \"\\u8BF7\\u8F93\\u5165\\u9080\\u8BF7\\u7801\",\n    variant: \"outlined\",\n    autocomplete: \"off\",\n    onChange: e => setCode(e.target.value),\n    onKeyUp: handleKeyup,\n    InputProps: {\n      endAdornment: __jsx(InputAdornment, {\n        position: \"end\"\n      }, __jsx(ArrowRightAltIcon, {\n        onClick: gInvitationCode\n      }))\n    }\n  }), __jsx(\"p\", {\n    style: {\n      color: \"#ad2727\",\n      paddingTop: \"10px\"\n    }\n  }, toast))));\n}","map":null,"metadata":{},"sourceType":"module"}