{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Router from \"next/router\";\nimport { Typography, TextField, Fab, Button, FormControlLabel, Checkbox, Modal } from \"@material-ui/core\";\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\nimport fetch from \"../public/js/nextFetch\";\nimport BraftEditor from \"braft-editor\";\nimport jsCookie from \"js-cookie\";\nimport \"braft-editor/dist/index.css\";\nimport \"../public/css/editor.less\";\nexport default function BfEditor(props) {\n  const {\n    entry,\n    postId\n  } = props;\n  const user = JSON.parse(jsCookie.get(\"userlogin\") || null);\n  const {\n    0: title,\n    1: setTitle\n  } = useState(null);\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const {\n    0: taglist,\n    1: setTag\n  } = useState(null);\n  const {\n    0: tagIndex,\n    1: setIndex\n  } = useState(1);\n  const [checked, setChecked] = React.useState(false);\n  const {\n    0: editorState,\n    1: setEditor\n  } = useState(BraftEditor.createEditorState(null));\n  useEffect(() => {\n    if (!user) {\n      Router.push({\n        pathname: \"/admin/login\"\n      });\n      return;\n    }\n\n    if (entry === \"userinfo\") {\n      fetchUser();\n    } else {\n      fetchTag();\n    }\n  }, []);\n\n  const submitContent = async () => {\n    if (user && entry === \"userinfo\") {\n      let result = await fetch({\n        url: \"user_CV\",\n        method: \"PUT\",\n        query: {\n          userId: user.id,\n          content: editorState\n        }\n      });\n\n      if (result.code == 200) {\n        alert(\"发布成功！\");\n      }\n    } else {\n      setOpen(true);\n    }\n  };\n\n  const submitArticle = async () => {\n    if (!title || !editorState) {\n      alert(\"标题或内容不能为空！\");\n      return;\n    }\n\n    let params = {\n      title,\n      tagname: taglist[tagIndex][\"tagname\"],\n      tagid: taglist[tagIndex][\"id\"],\n      isPublic: checked ? \"0\" : \"1\",\n      uid: user.id,\n      content: editorState\n    };\n    console.log(params);\n    fetch({\n      url: \"post\",\n      method: \"POST\",\n      query: params\n    }).then(result => {\n      alert(\"发布成功！\");\n    });\n  };\n\n  async function fetchTag() {\n    const res = await fetch(\"tag\");\n\n    if (res.code === 200) {\n      setTag(res.data);\n    }\n\n    if (postId && Number(postId) > 0) {\n      let lastArticle = await fetch(`post/${postId}`);\n      lastArticle = lastArticle.data[0];\n      setTitle(lastArticle[\"title\"]);\n      setEditor(BraftEditor.createEditorState(lastArticle[\"content\"]));\n      setChecked(lastArticle[\"isPublic\"]);\n      setIndex(lastArticle[\"tagid\"]);\n    }\n  }\n\n  async function fetchUser() {\n    const res = await fetch(`user_CV?userId=${user.id}`);\n\n    if (res.code === 200) {\n      setEditor(BraftEditor.createEditorState(res.data[0][\"content\"]));\n    }\n  }\n\n  return __jsx(\"div\", {\n    className: \"editor\"\n  }, __jsx(Typography, {\n    component: \"div\",\n    style: {\n      height: \"100vh\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      backgroundColor: \"#21242a\"\n    }\n  }, __jsx(BraftEditor, {\n    className: \"editor-main\",\n    value: editorState,\n    onChange: e => setEditor(e.toHTML()),\n    onSave: submitContent,\n    placeholder: \"\\u8F93\\u5165\\u6B63\\u6587...\",\n    componentBelowControlBar: entry === \"article\" ? __jsx(TextField, {\n      fullWidth: true,\n      autoComplete: \"off\",\n      size: \"medium\",\n      id: \"standard-basic\",\n      label: \"\\u8F93\\u5165\\u6807\\u9898...\",\n      className: \"bf-title\",\n      onChange: e => setTitle(e.target.value)\n    }) : null\n  }), __jsx(Fab, {\n    variant: \"extended\",\n    size: \"medium\",\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    style: {\n      position: \"fixed\",\n      right: \"15px\",\n      bottom: \"60px\",\n      width: \"100px\"\n    },\n    onClick: submitContent\n  }, __jsx(NavigationIcon, null), \"\\u53D1\\u5E03\")), __jsx(Modal, {\n    open: open,\n    className: \"editor-modal\",\n    onClose: () => setOpen(false)\n  }, __jsx(\"div\", {\n    className: \"blank-body\"\n  }, __jsx(\"h2\", {\n    id: \"simple-modal-title\"\n  }, \"\\u53D1\\u5E03\\u6587\\u7AE0\"), __jsx(\"div\", {\n    id: \"simple-modal-description\"\n  }, __jsx(\"h4\", null, \"\\u6807\\u7B7E\\u9009\\u62E9\"), taglist && taglist.map(tag => {\n    return __jsx(Button, {\n      size: \"small\",\n      variant: tagIndex === tag.id ? \"contained\" : \"outlined\",\n      color: \"primary\",\n      component: \"span\",\n      onClick: () => {\n        setIndex(index);\n      }\n    }, tag.tagname);\n  }), __jsx(\"div\", {\n    className: \"draft\"\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      color: \"primary\",\n      checked: checked,\n      onChange: () => {\n        setChecked(!checked);\n      },\n      value: \"0\"\n    }),\n    label: \"\\u4FDD\\u5B58\\u4E3A\\u8349\\u7A3F\"\n  }))), __jsx(\"div\", {\n    className: \"footer\"\n  }, __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: () => setOpen(false)\n  }, \"\\u53D6\\u6D88\"), __jsx(Button, {\n    variant: \"contained\",\n    onClick: submitArticle,\n    color: \"primary\"\n  }, \"\\u786E\\u8BA4\\u5E76\\u4FDD\\u5B58\")))));\n}","map":null,"metadata":{},"sourceType":"module"}