{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Desktop/boxland/components/bf-editor.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Router from \"next/router\";\nimport { Typography, TextField, Fab, Button, FormControlLabel, Checkbox, Modal } from \"@material-ui/core\";\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\nimport fetch from \"../public/js/nextFetch\";\nimport BraftEditor from \"braft-editor\";\nimport jsCookie from \"js-cookie\";\nimport \"braft-editor/dist/index.css\";\nimport \"../public/css/editor.less\";\nexport default function BfEditor(props) {\n  var entry = props.entry,\n      postId = props.postId;\n  var user = JSON.parse(jsCookie.get(\"userlogin\") || null);\n\n  var _useState = useState(null),\n      title = _useState[0],\n      setTitle = _useState[1];\n\n  var _useState2 = useState(false),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(null),\n      taglist = _useState3[0],\n      setTag = _useState3[1];\n\n  var _useState4 = useState(1),\n      tagIndex = _useState4[0],\n      setIndex = _useState4[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checked = _React$useState2[0],\n      setChecked = _React$useState2[1];\n\n  var _useState5 = useState(BraftEditor.createEditorState(null)),\n      editorState = _useState5[0],\n      setEditor = _useState5[1];\n\n  useEffect(function () {\n    if (!user) {\n      Router.push({\n        pathname: \"/admin/login\"\n      });\n      return;\n    }\n\n    if (entry === \"userinfo\") {\n      fetchUser();\n    } else {\n      fetchTag();\n    }\n  }, []);\n\n  var submitContent =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(user && entry === \"userinfo\")) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 3;\n              return fetch({\n                url: \"user_CV\",\n                method: \"PUT\",\n                query: {\n                  userId: user.id,\n                  content: editorState\n                }\n              });\n\n            case 3:\n              result = _context.sent;\n\n              if (result.code == 200) {\n                alert(\"发布成功！\");\n              }\n\n              _context.next = 8;\n              break;\n\n            case 7:\n              setOpen(true);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function submitContent() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var submitArticle =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var params;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(!title || !editorState)) {\n                _context2.next = 3;\n                break;\n              }\n\n              alert(\"标题或内容不能为空！\");\n              return _context2.abrupt(\"return\");\n\n            case 3:\n              params = {\n                title: title,\n                tagname: taglist[tagIndex][\"tagname\"],\n                tagid: taglist[tagIndex][\"id\"],\n                isPublic: checked ? \"0\" : \"1\",\n                uid: user.id,\n                content: editorState\n              };\n              console.log(params);\n              fetch({\n                url: \"post\",\n                method: \"POST\",\n                query: params\n              }).then(function (result) {\n                alert(\"发布成功！\");\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function submitArticle() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  function fetchTag() {\n    return _fetchTag.apply(this, arguments);\n  }\n\n  function _fetchTag() {\n    _fetchTag = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var res, lastArticle;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return fetch(\"tag\");\n\n            case 2:\n              res = _context3.sent;\n\n              if (res.code === 200) {\n                setTag(res.data);\n              }\n\n              if (!(postId && Number(postId) > 0)) {\n                _context3.next = 13;\n                break;\n              }\n\n              _context3.next = 7;\n              return fetch(\"post/\".concat(postId));\n\n            case 7:\n              lastArticle = _context3.sent;\n              lastArticle = lastArticle.data[0];\n              setTitle(lastArticle[\"title\"]);\n              setEditor(BraftEditor.createEditorState(lastArticle[\"content\"]));\n              setChecked(lastArticle[\"isPublic\"]);\n              setIndex(lastArticle[\"tagid\"]);\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _fetchTag.apply(this, arguments);\n  }\n\n  function fetchUser() {\n    return _fetchUser.apply(this, arguments);\n  }\n\n  function _fetchUser() {\n    _fetchUser = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return fetch(\"user_CV?userId=\".concat(user.id));\n\n            case 2:\n              res = _context4.sent;\n\n              if (res.code === 200) {\n                setEditor(BraftEditor.createEditorState(res.data[0][\"content\"]));\n              }\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _fetchUser.apply(this, arguments);\n  }\n\n  return __jsx(\"div\", {\n    className: \"editor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, __jsx(Typography, {\n    component: \"div\",\n    style: {\n      height: \"100vh\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      backgroundColor: \"#21242a\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(BraftEditor, {\n    className: \"editor-main\",\n    value: editorState,\n    onChange: function onChange(e) {\n      return setEditor(e.toHTML());\n    },\n    onSave: submitContent,\n    placeholder: \"\\u8F93\\u5165\\u6B63\\u6587...\",\n    componentBelowControlBar: entry === \"article\" ? __jsx(TextField, {\n      fullWidth: true,\n      autoComplete: \"off\",\n      size: \"medium\",\n      id: \"standard-basic\",\n      label: \"\\u8F93\\u5165\\u6807\\u9898...\",\n      className: \"bf-title\",\n      onChange: function onChange(e) {\n        return setTitle(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }) : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), __jsx(Fab, {\n    variant: \"extended\",\n    size: \"medium\",\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    style: {\n      position: \"fixed\",\n      right: \"15px\",\n      bottom: \"60px\",\n      width: \"100px\"\n    },\n    onClick: submitContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, __jsx(NavigationIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), \"\\u53D1\\u5E03\")), __jsx(Modal, {\n    open: open,\n    className: \"editor-modal\",\n    onClose: function onClose() {\n      return setOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"blank-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    id: \"simple-modal-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"\\u53D1\\u5E03\\u6587\\u7AE0\"), __jsx(\"div\", {\n    id: \"simple-modal-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, __jsx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"\\u6807\\u7B7E\\u9009\\u62E9\"), taglist && taglist.map(function (tag) {\n    return __jsx(Button, {\n      size: \"small\",\n      variant: tagIndex === tag.id ? \"contained\" : \"outlined\",\n      color: \"primary\",\n      component: \"span\",\n      onClick: function onClick() {\n        setIndex(index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, tag.tagname);\n  }), __jsx(\"div\", {\n    className: \"draft\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      color: \"primary\",\n      checked: checked,\n      onChange: function onChange() {\n        setChecked(!checked);\n      },\n      value: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }),\n    label: \"\\u4FDD\\u5B58\\u4E3A\\u8349\\u7A3F\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: function onClick() {\n      return setOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"\\u53D6\\u6D88\"), __jsx(Button, {\n    variant: \"contained\",\n    onClick: submitArticle,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"\\u786E\\u8BA4\\u5E76\\u4FDD\\u5B58\")))));\n}","map":{"version":3,"sources":["/Users/admin/Desktop/boxland/components/bf-editor.js"],"names":["React","useState","useEffect","Router","Typography","TextField","Fab","Button","FormControlLabel","Checkbox","Modal","NavigationIcon","fetch","BraftEditor","jsCookie","BfEditor","props","entry","postId","user","JSON","parse","get","title","setTitle","open","setOpen","taglist","setTag","tagIndex","setIndex","checked","setChecked","createEditorState","editorState","setEditor","push","pathname","fetchUser","fetchTag","submitContent","url","method","query","userId","id","content","result","code","alert","submitArticle","params","tagname","tagid","isPublic","uid","console","log","then","res","data","Number","lastArticle","height","display","justifyContent","alignItems","flexDirection","backgroundColor","e","toHTML","target","value","position","right","bottom","width","map","tag","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Router from \"next/router\";\nimport {\n  Typography,\n  TextField,\n  Fab,\n  Button,\n  FormControlLabel,\n  Checkbox,\n  Modal\n} from \"@material-ui/core\";\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\nimport fetch from \"../public/js/nextFetch\";\nimport BraftEditor from \"braft-editor\";\nimport jsCookie from \"js-cookie\";\nimport \"braft-editor/dist/index.css\";\nimport \"../public/css/editor.less\";\n\nexport default function BfEditor(props) {\n  const { entry, postId } = props;\n  const user = JSON.parse(jsCookie.get(\"userlogin\") || null);\n  const [title, setTitle] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [taglist, setTag] = useState(null);\n  const [tagIndex, setIndex] = useState(1);\n  const [checked, setChecked] = React.useState(false);\n  const [editorState, setEditor] = useState(\n    BraftEditor.createEditorState(null)\n  );\n\n  useEffect(() => {\n    if (!user) {\n      Router.push({\n        pathname: \"/admin/login\"\n      });\n      return;\n    }\n    if (entry === \"userinfo\") {\n      fetchUser();\n    } else {\n      fetchTag();\n    }\n  }, []);\n\n  const submitContent = async () => {\n    if (user && entry === \"userinfo\") {\n      let result = await fetch({\n        url: \"user_CV\",\n        method: \"PUT\",\n        query: {\n          userId: user.id,\n          content: editorState\n        }\n      });\n      if (result.code == 200) {\n        alert(\"发布成功！\");\n      }\n    } else {\n      setOpen(true);\n    }\n  };\n\n  const submitArticle = async () => {\n    if (!title || !editorState) {\n      alert(\"标题或内容不能为空！\");\n      return;\n    }\n    let params = {\n      title,\n      tagname: taglist[tagIndex][\"tagname\"],\n      tagid: taglist[tagIndex][\"id\"],\n      isPublic: checked ? \"0\" : \"1\",\n      uid: user.id,\n      content: editorState\n    };\n    console.log(params);\n    fetch({\n      url: \"post\",\n      method: \"POST\",\n      query: params\n    }).then(result => {\n      alert(\"发布成功！\");\n    });\n  };\n\n  async function fetchTag() {\n    const res = await fetch(\"tag\");\n    if (res.code === 200) {\n      setTag(res.data);\n    }\n    if (postId && Number(postId) > 0) {\n      let lastArticle = await fetch(`post/${postId}`);\n      lastArticle = lastArticle.data[0];\n      setTitle(lastArticle[\"title\"]);\n      setEditor(BraftEditor.createEditorState(lastArticle[\"content\"]));\n      setChecked(lastArticle[\"isPublic\"]);\n      setIndex(lastArticle[\"tagid\"]);\n    }\n  }\n  async function fetchUser() {\n    const res = await fetch(`user_CV?userId=${user.id}`);\n    if (res.code === 200) {\n      setEditor(BraftEditor.createEditorState(res.data[0][\"content\"]));\n    }\n  }\n\n  return (\n    <div className=\"editor\">\n      <Typography\n        component=\"div\"\n        style={{\n          height: \"100vh\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexDirection: \"column\",\n          backgroundColor: \"#21242a\"\n        }}\n      >\n        <BraftEditor\n          className=\"editor-main\"\n          value={editorState}\n          onChange={e => setEditor(e.toHTML())}\n          onSave={submitContent}\n          placeholder=\"输入正文...\"\n          componentBelowControlBar={\n            entry === \"article\" ? (\n              <TextField\n                fullWidth\n                autoComplete=\"off\"\n                size=\"medium\"\n                id=\"standard-basic\"\n                label=\"输入标题...\"\n                className=\"bf-title\"\n                onChange={e => setTitle(e.target.value)}\n              />\n            ) : null\n          }\n        />\n\n        <Fab\n          variant=\"extended\"\n          size=\"medium\"\n          color=\"primary\"\n          aria-label=\"add\"\n          style={{\n            position: \"fixed\",\n            right: \"15px\",\n            bottom: \"60px\",\n            width: \"100px\"\n          }}\n          onClick={submitContent}\n        >\n          <NavigationIcon />\n          发布\n        </Fab>\n      </Typography>\n\n      <Modal\n        open={open}\n        className=\"editor-modal\"\n        onClose={() => setOpen(false)}\n      >\n        <div className=\"blank-body\">\n          <h2 id=\"simple-modal-title\">发布文章</h2>\n          <div id=\"simple-modal-description\">\n            <h4>标签选择</h4>\n            {taglist &&\n              taglist.map(tag => {\n                return (\n                  <Button\n                    size=\"small\"\n                    variant={tagIndex === tag.id ? \"contained\" : \"outlined\"}\n                    color=\"primary\"\n                    component=\"span\"\n                    onClick={() => {\n                      setIndex(index);\n                    }}\n                  >\n                    {tag.tagname}\n                  </Button>\n                );\n              })}\n\n            <div className=\"draft\">\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    checked={checked}\n                    onChange={() => {\n                      setChecked(!checked);\n                    }}\n                    value=\"0\"\n                  />\n                }\n                label=\"保存为草稿\"\n              />\n            </div>\n          </div>\n          <div className=\"footer\">\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => setOpen(false)}\n            >\n              取消\n            </Button>\n            <Button variant=\"contained\" onClick={submitArticle} color=\"primary\">\n              确认并保存\n            </Button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}