{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/boxland/pages/admin/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport jsCookie from \"js-cookie\";\nimport Router from \"next/router\";\nexport default function AdminIndex() {\n  const userlogin = JSON.parse(jsCookie.get(\"userlogin\") || null);\n  const tileData = [{\n    img: \"/static/images/01.jpg\",\n    title: \"文章\",\n    author: \"日常分享内容编辑\",\n    to: \"/admin/editor\",\n    params: {\n      entry: \"article\"\n    }\n  }, {\n    img: \"/static/images/02.jpg\",\n    title: \"简介\",\n    author: \"个人简历编辑\",\n    to: \"/admin/editor\",\n    params: {\n      entry: \"userinfo\"\n    }\n  }, {\n    img: \"/static/images/03.jpg\",\n    title: \"标签\",\n    author: \"个性标签维护\"\n  }, {\n    img: \"/static/images/04.jpg\",\n    title: \"其它\",\n    author: \"备用选项\"\n  }];\n  useEffect(() => {\n    Router.beforePopState(({\n      as\n    }) => {\n      window.location.href = as;\n      window.location.reload();\n    });\n  }, []);\n\n  const handleClick = obj => {\n    if (!obj[\"to\"]) return;\n    Router.push({\n      pathname: obj[\"to\"],\n      query: obj[\"params\"]\n    });\n  };\n\n  const useStyles = () => {\n    return makeStyles(theme => ({\n      root: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-around\",\n        overflow: \"hidden\",\n        backgroundColor: theme.palette.background.paper\n      },\n      gridList: {\n        width: 500,\n        height: 450\n      },\n      icon: {\n        color: \"rgba(255, 255, 255, 0.54)\"\n      }\n    }));\n  };\n\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root,\n    style: {\n      width: \"480px\",\n      margin: \"40px auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(GridList, {\n    cellHeight: 180,\n    className: classes.gridList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(GridListTile, {\n    key: \"Subheader\",\n    cols: 2,\n    style: {\n      height: \"auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(ListSubheader, {\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"\\u4F60\\u597D\\uFF0C\", userlogin && userlogin[\"username\"])), tileData.map(tile => __jsx(GridListTile, {\n    key: tile.img,\n    onClick: () => handleClick(tile),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: tile.img,\n    alt: tile.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), __jsx(GridListTileBar, {\n    title: tile.title,\n    subtitle: __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, tile.author),\n    actionIcon: __jsx(IconButton, {\n      \"aria-label\": `info about ${tile.title}`,\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, __jsx(InfoIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/Users/admin/Desktop/boxland/pages/admin/index.js"],"names":["React","useEffect","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","IconButton","InfoIcon","jsCookie","Router","AdminIndex","userlogin","JSON","parse","get","tileData","img","title","author","to","params","entry","beforePopState","as","window","location","href","reload","handleClick","obj","push","pathname","query","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","color","classes","margin","map","tile"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport jsCookie from \"js-cookie\";\nimport Router from \"next/router\";\n\nexport default function AdminIndex() {\n  const userlogin = JSON.parse(jsCookie.get(\"userlogin\") || null);\n  const tileData = [\n    {\n      img: \"/static/images/01.jpg\",\n      title: \"文章\",\n      author: \"日常分享内容编辑\",\n      to: \"/admin/editor\",\n      params: {\n        entry: \"article\"\n      }\n    },\n    {\n      img: \"/static/images/02.jpg\",\n      title: \"简介\",\n      author: \"个人简历编辑\",\n      to: \"/admin/editor\",\n      params: {\n        entry: \"userinfo\"\n      }\n    },\n    {\n      img: \"/static/images/03.jpg\",\n      title: \"标签\",\n      author: \"个性标签维护\"\n    },\n    {\n      img: \"/static/images/04.jpg\",\n      title: \"其它\",\n      author: \"备用选项\"\n    }\n  ];\n\n  useEffect(() => {\n    Router.beforePopState(({ as }) => {\n      window.location.href = as;\n      window.location.reload();\n    });\n  }, []);\n\n  const handleClick = obj => {\n    if (!obj[\"to\"]) return;\n    Router.push({\n      pathname: obj[\"to\"],\n      query: obj[\"params\"]\n    });\n  };\n  const useStyles = () => {\n    return makeStyles(theme => ({\n      root: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-around\",\n        overflow: \"hidden\",\n        backgroundColor: theme.palette.background.paper\n      },\n      gridList: {\n        width: 500,\n        height: 450\n      },\n      icon: {\n        color: \"rgba(255, 255, 255, 0.54)\"\n      }\n    }));\n  };\n  const classes = useStyles();\n  return (\n    <div\n      className={classes.root}\n      style={{ width: \"480px\", margin: \"40px auto\" }}\n    >\n      <GridList cellHeight={180} className={classes.gridList}>\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: \"auto\" }}>\n          <ListSubheader component=\"div\">\n            你好，{userlogin && userlogin[\"username\"]}\n          </ListSubheader>\n        </GridListTile>\n        {tileData.map(tile => (\n          <GridListTile key={tile.img} onClick={() => handleClick(tile)}>\n            <img src={tile.img} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              subtitle={<span>{tile.author}</span>}\n              actionIcon={\n                <IconButton\n                  aria-label={`info about ${tile.title}`}\n                  className={classes.icon}\n                >\n                  <InfoIcon />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}