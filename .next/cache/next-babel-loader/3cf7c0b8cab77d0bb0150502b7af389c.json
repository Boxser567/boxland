{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Head from \"next/head\";\nimport Router from \"next/router\";\nimport { Container, Typography, TextField, InputAdornment } from \"@material-ui/core\";\nimport ArrowRightAltIcon from \"@material-ui/icons/ArrowRightAlt\";\nimport fetch from \"../public/js/nextFetch\";\nimport \"../public/css/about.less\";\nexport default function Invitation() {\n  var _useState = useState(null),\n      code = _useState[0],\n      setCode = _useState[1];\n\n  var _useState2 = useState(null),\n      toast = _useState2[0],\n      setToast = _useState2[1];\n\n  var gInvitationCode =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(code);\n\n              if (!(code == \"\")) {\n                _context.next = 4;\n                break;\n              }\n\n              setCode(\"请输入邀请码！\");\n              return _context.abrupt(\"return\");\n\n            case 4:\n              _context.next = 6;\n              return fetch(\"users?code=\".concat(code));\n\n            case 6:\n              result = _context.sent;\n\n              if (result.data && result.data.length === 0) {\n                setCode(\"\");\n                setToast(\"请输入正确的邀请码！\");\n              } else {\n                Router.push({\n                  pathname: \"/about\",\n                  query: {\n                    code: code,\n                    uid: result.data[0][\"id\"]\n                  }\n                });\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function gInvitationCode() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleKeyup = function handleKeyup(e) {\n    if (e.keyCode !== 13) return;\n    gInvitationCode();\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"\\u9080\\u8BF7\\u7801\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"/css/common.css\"\n  })), __jsx(\"div\", {\n    className: \"invitation\"\n  }, __jsx(Typography, {\n    component: \"div\",\n    style: {\n      backgroundColor: \"rgb(19, 134, 226)\",\n      height: \"100vh\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\"\n    }\n  }, __jsx(TextField, {\n    id: \"outlined-basic\",\n    label: \"\\u8BF7\\u8F93\\u5165\\u9080\\u8BF7\\u7801\",\n    variant: \"outlined\",\n    autocomplete: \"off\",\n    onChange: function onChange(e) {\n      return setCode(e.target.value);\n    },\n    onKeyUp: handleKeyup,\n    InputProps: {\n      endAdornment: __jsx(InputAdornment, {\n        position: \"end\"\n      }, __jsx(ArrowRightAltIcon, {\n        onClick: gInvitationCode\n      }))\n    }\n  }), __jsx(\"p\", {\n    style: {\n      color: \"#ad2727\",\n      paddingTop: \"10px\"\n    }\n  }, toast))));\n}","map":null,"metadata":{},"sourceType":"module"}