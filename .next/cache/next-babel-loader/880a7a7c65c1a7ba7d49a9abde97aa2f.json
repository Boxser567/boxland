{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Router from \"next/router\";\nimport Moment from \"react-moment\";\nimport jsCookie from \"js-cookie\";\nimport Main from \"../layouts/main\";\nimport fetch from \"../public/js/nextFetch\";\nimport \"braft-editor/dist/output.css\";\nexport default function About(props) {\n  const {\n    invalid,\n    userlogin,\n    uid\n  } = props;\n  const {\n    0: content,\n    1: setContent\n  } = useState(null);\n  useEffect(() => {\n    if (invalid && !userlogin) {\n      Router.push({\n        pathname: \"/invitation\"\n      });\n    } else {\n      fetchUserCV(uid || userlogin.id);\n    }\n  }, [uid]);\n\n  async function fetchUserCV(id) {\n    const res = await fetch(\"user_CV?userId=\" + id);\n    setContent(res.data[0][\"content\"]);\n  }\n\n  return __jsx(Main, null, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"article\", {\n    className: \"personal-msg braft-output-content\"\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: content\n    }\n  }))));\n}\n\nAbout.getInitialProps = async ({\n  query\n}) => {\n  let thisProps = query;\n\n  if (!query.code || !query.uid) {\n    thisProps.invalid = true;\n  }\n\n  thisProps.userlogin = JSON.parse(jsCookie.get(\"userlogin\") || null);\n  return thisProps;\n};","map":null,"metadata":{},"sourceType":"module"}