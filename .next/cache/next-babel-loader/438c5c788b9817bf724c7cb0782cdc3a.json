{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport fetch from \"isomorphic-unfetch\";\nimport qs from \"query-string\";\nvar defaultOptions = {\n  basiclUrl: \"http://api.boxser.cn/api/\",\n  method: \"get\",\n  headers: {\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\n    Accept: \"application/json\"\n  },\n  timeout: 6000\n}; // ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PATCH', 'PUT']\n\nvar nextFetch = function nextFetch(options) {\n  var opts = null,\n      method = \"get\",\n      requestUrl = null;\n  opts = _Object$assign({}, defaultOptions, options || {});\n  method = opts.method.toLowerCase();\n  requestUrl = opts.basiclUrl;\n  requestUrl += opts.url;\n\n  if (typeof options === \"string\") {\n    requestUrl = defaultOptions[\"basiclUrl\"] + options;\n  }\n\n  if (method !== \"get\") {\n    opts.body = qs.stringify(opts.query);\n  }\n\n  return fetch(requestUrl, opts).then(function (r) {\n    return r.json();\n  }).then(function (result) {\n    return result;\n  });\n};\n\nexport default nextFetch;","map":{"version":3,"sources":["/Users/admin/Desktop/boxland/public/js/nextFetch.js"],"names":["fetch","qs","defaultOptions","basiclUrl","method","headers","Accept","timeout","nextFetch","options","opts","requestUrl","toLowerCase","url","body","stringify","query","then","r","json","result"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,EAAP,MAAe,cAAf;AAEA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,SAAS,EAAE,2BADU;AAErBC,EAAAA,MAAM,EAAE,KAFa;AAGrBC,EAAAA,OAAO,EAAE;AACP,oBAAgB,mCADT;AAEPC,IAAAA,MAAM,EAAE;AAFD,GAHY;AAOrBC,EAAAA,OAAO,EAAE;AAPY,CAAvB,C,CAUA;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,OAAO,EAAI;AAAA,MACtBC,IADsB,GACO,IADP;AAAA,MAChBN,MADgB,GACa,KADb;AAAA,MACRO,UADQ,GACoB,IADpB;AAE3BD,EAAAA,IAAI,GAAG,eAAc,EAAd,EAAkBR,cAAlB,EAAkCO,OAAO,IAAI,EAA7C,CAAP;AACAL,EAAAA,MAAM,GAAGM,IAAI,CAACN,MAAL,CAAYQ,WAAZ,EAAT;AACAD,EAAAA,UAAU,GAAGD,IAAI,CAACP,SAAlB;AACAQ,EAAAA,UAAU,IAAID,IAAI,CAACG,GAAnB;;AAEA,MAAI,OAAOJ,OAAP,KAAmB,QAAvB,EAAiC;AAC/BE,IAAAA,UAAU,GAAGT,cAAc,CAAC,WAAD,CAAd,GAA8BO,OAA3C;AACD;;AAED,MAAIL,MAAM,KAAK,KAAf,EAAsB;AACpBM,IAAAA,IAAI,CAACI,IAAL,GAAYb,EAAE,CAACc,SAAH,CAAaL,IAAI,CAACM,KAAlB,CAAZ;AACD;;AAED,SAAOhB,KAAK,CAACW,UAAD,EAAaD,IAAb,CAAL,CACJO,IADI,CACC,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,GADF,EAEJF,IAFI,CAEC,UAAAG,MAAM,EAAI;AACd,WAAOA,MAAP;AACD,GAJI,CAAP;AAKD,CApBD;;AAsBA,eAAeZ,SAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport qs from \"query-string\";\n\nconst defaultOptions = {\n  basiclUrl: \"http://api.boxser.cn/api/\",\n  method: \"get\",\n  headers: {\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\n    Accept: \"application/json\"\n  },\n  timeout: 6000\n};\n\n// ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PATCH', 'PUT']\n\nconst nextFetch = options => {\n  let [opts, method, requestUrl] = [null, \"get\", null];\n  opts = Object.assign({}, defaultOptions, options || {});\n  method = opts.method.toLowerCase();\n  requestUrl = opts.basiclUrl;\n  requestUrl += opts.url;\n\n  if (typeof options === \"string\") {\n    requestUrl = defaultOptions[\"basiclUrl\"] + options;\n  }\n\n  if (method !== \"get\") {\n    opts.body = qs.stringify(opts.query);\n  }\n\n  return fetch(requestUrl, opts)\n    .then(r => r.json())\n    .then(result => {\n      return result;\n    });\n};\n\nexport default nextFetch;\n"]},"metadata":{},"sourceType":"module"}