{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Router from \"next/router\";\nimport { Typography, TextField, Fab, Button, FormControlLabel, Checkbox, Modal } from \"@material-ui/core\";\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\nimport fetch from \"../public/js/nextFetch\";\nimport BraftEditor from \"braft-editor\";\nimport jsCookie from \"js-cookie\";\nimport \"braft-editor/dist/index.css\";\nimport \"../public/css/editor.less\";\nexport default function BfEditor(props) {\n  var entry = props.entry,\n      postId = props.postId;\n  var user = JSON.parse(jsCookie.get(\"userlogin\") || null);\n\n  var _useState = useState(null),\n      title = _useState[0],\n      setTitle = _useState[1];\n\n  var _useState2 = useState(false),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(null),\n      taglist = _useState3[0],\n      setTag = _useState3[1];\n\n  var _useState4 = useState(1),\n      tagIndex = _useState4[0],\n      setIndex = _useState4[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checked = _React$useState2[0],\n      setChecked = _React$useState2[1];\n\n  var _useState5 = useState(BraftEditor.createEditorState(null)),\n      editorState = _useState5[0],\n      setEditor = _useState5[1];\n\n  useEffect(function () {\n    if (!user) {\n      Router.push({\n        pathname: \"/admin/login\"\n      });\n      return;\n    }\n\n    if (entry === \"userinfo\") {\n      fetchUser();\n    } else {\n      fetchTag();\n    }\n  }, []);\n\n  var submitContent =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(user && entry === \"userinfo\")) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 3;\n              return fetch({\n                url: \"user_CV\",\n                method: \"PUT\",\n                query: {\n                  userId: user.id,\n                  content: editorState\n                }\n              });\n\n            case 3:\n              result = _context.sent;\n\n              if (result.code == 200) {\n                alert(\"发布成功！\");\n              }\n\n              _context.next = 8;\n              break;\n\n            case 7:\n              setOpen(true);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function submitContent() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var submitArticle =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var params;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(!title || !editorState)) {\n                _context2.next = 3;\n                break;\n              }\n\n              alert(\"标题或内容不能为空！\");\n              return _context2.abrupt(\"return\");\n\n            case 3:\n              params = {\n                title: title,\n                tagname: taglist[tagIndex][\"tagname\"],\n                tagid: taglist[tagIndex][\"id\"],\n                isPublic: checked ? \"0\" : \"1\",\n                uid: user.id,\n                content: editorState\n              };\n              console.log(params);\n              fetch({\n                url: \"post\",\n                method: \"POST\",\n                query: params\n              }).then(function (result) {\n                alert(\"发布成功！\");\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function submitArticle() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  function fetchTag() {\n    return _fetchTag.apply(this, arguments);\n  }\n\n  function _fetchTag() {\n    _fetchTag = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var res, lastArticle;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return fetch(\"tag\");\n\n            case 2:\n              res = _context3.sent;\n\n              if (res.code === 200) {\n                setTag(res.data);\n              }\n\n              if (!(postId && Number(postId) > 0)) {\n                _context3.next = 13;\n                break;\n              }\n\n              _context3.next = 7;\n              return fetch(\"post/\".concat(postId));\n\n            case 7:\n              lastArticle = _context3.sent;\n              lastArticle = lastArticle.data[0];\n              setTitle(lastArticle[\"title\"]);\n              setEditor(BraftEditor.createEditorState(lastArticle[\"content\"]));\n              setChecked(lastArticle[\"isPublic\"]);\n              setIndex(lastArticle[\"tagid\"]);\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _fetchTag.apply(this, arguments);\n  }\n\n  function fetchUser() {\n    return _fetchUser.apply(this, arguments);\n  }\n\n  function _fetchUser() {\n    _fetchUser = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return fetch(\"user_CV?userId=\".concat(user.id));\n\n            case 2:\n              res = _context4.sent;\n\n              if (res.code === 200) {\n                setEditor(BraftEditor.createEditorState(res.data[0][\"content\"]));\n              }\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _fetchUser.apply(this, arguments);\n  }\n\n  return __jsx(\"div\", {\n    className: \"editor\"\n  }, __jsx(Typography, {\n    component: \"div\",\n    style: {\n      height: \"100vh\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      backgroundColor: \"#21242a\"\n    }\n  }, __jsx(BraftEditor, {\n    className: \"editor-main\",\n    value: editorState,\n    onChange: function onChange(e) {\n      return setEditor(e.toHTML());\n    },\n    onSave: submitContent,\n    placeholder: \"\\u8F93\\u5165\\u6B63\\u6587...\",\n    componentBelowControlBar: entry === \"article\" ? __jsx(TextField, {\n      fullWidth: true,\n      autoComplete: \"off\",\n      size: \"medium\",\n      id: \"standard-basic\",\n      label: \"\\u8F93\\u5165\\u6807\\u9898...\",\n      className: \"bf-title\",\n      onChange: function onChange(e) {\n        return setTitle(e.target.value);\n      }\n    }) : null\n  }), __jsx(Fab, {\n    variant: \"extended\",\n    size: \"medium\",\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    style: {\n      position: \"fixed\",\n      right: \"15px\",\n      bottom: \"60px\",\n      width: \"100px\"\n    },\n    onClick: submitContent\n  }, __jsx(NavigationIcon, null), \"\\u53D1\\u5E03\")), __jsx(Modal, {\n    open: open,\n    className: \"editor-modal\",\n    onClose: function onClose() {\n      return setOpen(false);\n    }\n  }, __jsx(\"div\", {\n    className: \"blank-body\"\n  }, __jsx(\"h2\", {\n    id: \"simple-modal-title\"\n  }, \"\\u53D1\\u5E03\\u6587\\u7AE0\"), __jsx(\"div\", {\n    id: \"simple-modal-description\"\n  }, __jsx(\"h4\", null, \"\\u6807\\u7B7E\\u9009\\u62E9\"), taglist && taglist.map(function (tag) {\n    return __jsx(Button, {\n      size: \"small\",\n      variant: tagIndex === tag.id ? \"contained\" : \"outlined\",\n      color: \"primary\",\n      component: \"span\",\n      onClick: function onClick() {\n        setIndex(index);\n      }\n    }, tag.tagname);\n  }), __jsx(\"div\", {\n    className: \"draft\"\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      color: \"primary\",\n      checked: checked,\n      onChange: function onChange() {\n        setChecked(!checked);\n      },\n      value: \"0\"\n    }),\n    label: \"\\u4FDD\\u5B58\\u4E3A\\u8349\\u7A3F\"\n  }))), __jsx(\"div\", {\n    className: \"footer\"\n  }, __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: function onClick() {\n      return setOpen(false);\n    }\n  }, \"\\u53D6\\u6D88\"), __jsx(Button, {\n    variant: \"contained\",\n    onClick: submitArticle,\n    color: \"primary\"\n  }, \"\\u786E\\u8BA4\\u5E76\\u4FDD\\u5B58\")))));\n}","map":null,"metadata":{},"sourceType":"module"}