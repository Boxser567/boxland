{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/boxland/components/bf-editor.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Router from \"next/router\";\nimport { Typography, TextField, Fab, Button, FormControlLabel, Checkbox, Modal } from \"@material-ui/core\";\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\nimport fetch from \"../public/js/nextFetch\";\nimport BraftEditor from \"braft-editor\";\nimport jsCookie from \"js-cookie\";\nimport \"braft-editor/dist/index.css\";\nimport \"../public/css/editor.less\";\nexport default function BfEditor(props) {\n  const {\n    entry,\n    postId\n  } = props;\n  const user = JSON.parse(jsCookie.get(\"userlogin\") || null);\n  const {\n    0: title,\n    1: setTitle\n  } = useState(null);\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const {\n    0: taglist,\n    1: setTag\n  } = useState(null);\n  const {\n    0: tagIndex,\n    1: setIndex\n  } = useState(1);\n  const [checked, setChecked] = React.useState(false);\n  const {\n    0: editorState,\n    1: setEditor\n  } = useState(BraftEditor.createEditorState(null));\n  useEffect(() => {\n    if (!user) {\n      Router.push({\n        pathname: \"/admin/login\"\n      });\n      return;\n    }\n\n    if (entry === \"userinfo\") {\n      fetchUser();\n    } else {\n      fetchTag();\n    }\n  }, []);\n\n  const submitContent = async () => {\n    if (user && entry === \"userinfo\") {\n      let result = await fetch({\n        url: \"user_CV\",\n        method: \"PUT\",\n        query: {\n          userId: user.id,\n          content: editorState\n        }\n      });\n\n      if (result.code == 200) {\n        alert(\"发布成功！\");\n      }\n    } else {\n      setOpen(true);\n    }\n  };\n\n  const submitArticle = async () => {\n    if (!title || !editorState) {\n      alert(\"标题或内容不能为空！\");\n      return;\n    }\n\n    let params = {\n      title,\n      tagname: taglist[tagIndex][\"tagname\"],\n      tagid: taglist[tagIndex][\"id\"],\n      isPublic: checked ? \"0\" : \"1\",\n      uid: user.id,\n      content: editorState\n    };\n    console.log(params);\n    fetch({\n      url: \"post\",\n      method: \"POST\",\n      query: params\n    }).then(result => {\n      alert(\"发布成功！\");\n    });\n  };\n\n  async function fetchTag() {\n    const res = await fetch(\"tag\");\n\n    if (res.code === 200) {\n      setTag(res.data);\n    }\n\n    if (postId && Number(postId) > 0) {\n      let lastArticle = await fetch(`post/${postId}`);\n      lastArticle = lastArticle.data[0];\n      setTitle(lastArticle[\"title\"]);\n      setEditor(BraftEditor.createEditorState(lastArticle[\"content\"]));\n      setChecked(lastArticle[\"isPublic\"]);\n      setIndex(lastArticle[\"tagid\"]);\n    }\n  }\n\n  async function fetchUser() {\n    const res = await fetch(`user_CV?userId=${user.id}`);\n\n    if (res.code === 200) {\n      setEditor(BraftEditor.createEditorState(res.data[0][\"content\"]));\n    }\n  }\n\n  return __jsx(\"div\", {\n    className: \"editor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, __jsx(Typography, {\n    component: \"div\",\n    style: {\n      height: \"100vh\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      backgroundColor: \"#21242a\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(BraftEditor, {\n    className: \"editor-main\",\n    value: editorState,\n    onChange: e => setEditor(e.toHTML()),\n    onSave: submitContent,\n    placeholder: \"\\u8F93\\u5165\\u6B63\\u6587...\",\n    componentBelowControlBar: entry === \"article\" ? __jsx(TextField, {\n      fullWidth: true,\n      autoComplete: \"off\",\n      size: \"medium\",\n      id: \"standard-basic\",\n      label: \"\\u8F93\\u5165\\u6807\\u9898...\",\n      className: \"bf-title\",\n      onChange: e => setTitle(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }) : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), __jsx(Fab, {\n    variant: \"extended\",\n    size: \"medium\",\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    style: {\n      position: \"fixed\",\n      right: \"15px\",\n      bottom: \"60px\",\n      width: \"100px\"\n    },\n    onClick: submitContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, __jsx(NavigationIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), \"\\u53D1\\u5E03\")), __jsx(Modal, {\n    open: open,\n    className: \"editor-modal\",\n    onClose: () => setOpen(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"blank-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    id: \"simple-modal-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"\\u53D1\\u5E03\\u6587\\u7AE0\"), __jsx(\"div\", {\n    id: \"simple-modal-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, __jsx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"\\u6807\\u7B7E\\u9009\\u62E9\"), taglist && taglist.map(tag => {\n    return __jsx(Button, {\n      size: \"small\",\n      variant: tagIndex === tag.id ? \"contained\" : \"outlined\",\n      color: \"primary\",\n      component: \"span\",\n      onClick: () => {\n        setIndex(index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, tag.tagname);\n  }), __jsx(\"div\", {\n    className: \"draft\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      color: \"primary\",\n      checked: checked,\n      onChange: () => {\n        setChecked(!checked);\n      },\n      value: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }),\n    label: \"\\u4FDD\\u5B58\\u4E3A\\u8349\\u7A3F\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: () => setOpen(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"\\u53D6\\u6D88\"), __jsx(Button, {\n    variant: \"contained\",\n    onClick: submitArticle,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"\\u786E\\u8BA4\\u5E76\\u4FDD\\u5B58\")))));\n}","map":{"version":3,"sources":["/Users/admin/Desktop/boxland/components/bf-editor.js"],"names":["React","useState","useEffect","Router","Typography","TextField","Fab","Button","FormControlLabel","Checkbox","Modal","NavigationIcon","fetch","BraftEditor","jsCookie","BfEditor","props","entry","postId","user","JSON","parse","get","title","setTitle","open","setOpen","taglist","setTag","tagIndex","setIndex","checked","setChecked","editorState","setEditor","createEditorState","push","pathname","fetchUser","fetchTag","submitContent","result","url","method","query","userId","id","content","code","alert","submitArticle","params","tagname","tagid","isPublic","uid","console","log","then","res","data","Number","lastArticle","height","display","justifyContent","alignItems","flexDirection","backgroundColor","e","toHTML","target","value","position","right","bottom","width","map","tag","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Router from \"next/router\";\nimport {\n  Typography,\n  TextField,\n  Fab,\n  Button,\n  FormControlLabel,\n  Checkbox,\n  Modal\n} from \"@material-ui/core\";\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\nimport fetch from \"../public/js/nextFetch\";\nimport BraftEditor from \"braft-editor\";\nimport jsCookie from \"js-cookie\";\nimport \"braft-editor/dist/index.css\";\nimport \"../public/css/editor.less\";\n\nexport default function BfEditor(props) {\n  const { entry, postId } = props;\n  const user = JSON.parse(jsCookie.get(\"userlogin\") || null);\n  const [title, setTitle] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [taglist, setTag] = useState(null);\n  const [tagIndex, setIndex] = useState(1);\n  const [checked, setChecked] = React.useState(false);\n  const [editorState, setEditor] = useState(\n    BraftEditor.createEditorState(null)\n  );\n\n  useEffect(() => {\n    if (!user) {\n      Router.push({\n        pathname: \"/admin/login\"\n      });\n      return;\n    }\n    if (entry === \"userinfo\") {\n      fetchUser();\n    } else {\n      fetchTag();\n    }\n  }, []);\n\n  const submitContent = async () => {\n    if (user && entry === \"userinfo\") {\n      let result = await fetch({\n        url: \"user_CV\",\n        method: \"PUT\",\n        query: {\n          userId: user.id,\n          content: editorState\n        }\n      });\n      if (result.code == 200) {\n        alert(\"发布成功！\");\n      }\n    } else {\n      setOpen(true);\n    }\n  };\n\n  const submitArticle = async () => {\n    if (!title || !editorState) {\n      alert(\"标题或内容不能为空！\");\n      return;\n    }\n    let params = {\n      title,\n      tagname: taglist[tagIndex][\"tagname\"],\n      tagid: taglist[tagIndex][\"id\"],\n      isPublic: checked ? \"0\" : \"1\",\n      uid: user.id,\n      content: editorState\n    };\n    console.log(params);\n    fetch({\n      url: \"post\",\n      method: \"POST\",\n      query: params\n    }).then(result => {\n      alert(\"发布成功！\");\n    });\n  };\n\n  async function fetchTag() {\n    const res = await fetch(\"tag\");\n    if (res.code === 200) {\n      setTag(res.data);\n    }\n    if (postId && Number(postId) > 0) {\n      let lastArticle = await fetch(`post/${postId}`);\n      lastArticle = lastArticle.data[0];\n      setTitle(lastArticle[\"title\"]);\n      setEditor(BraftEditor.createEditorState(lastArticle[\"content\"]));\n      setChecked(lastArticle[\"isPublic\"]);\n      setIndex(lastArticle[\"tagid\"]);\n    }\n  }\n  async function fetchUser() {\n    const res = await fetch(`user_CV?userId=${user.id}`);\n    if (res.code === 200) {\n      setEditor(BraftEditor.createEditorState(res.data[0][\"content\"]));\n    }\n  }\n\n  return (\n    <div className=\"editor\">\n      <Typography\n        component=\"div\"\n        style={{\n          height: \"100vh\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexDirection: \"column\",\n          backgroundColor: \"#21242a\"\n        }}\n      >\n        <BraftEditor\n          className=\"editor-main\"\n          value={editorState}\n          onChange={e => setEditor(e.toHTML())}\n          onSave={submitContent}\n          placeholder=\"输入正文...\"\n          componentBelowControlBar={\n            entry === \"article\" ? (\n              <TextField\n                fullWidth\n                autoComplete=\"off\"\n                size=\"medium\"\n                id=\"standard-basic\"\n                label=\"输入标题...\"\n                className=\"bf-title\"\n                onChange={e => setTitle(e.target.value)}\n              />\n            ) : null\n          }\n        />\n\n        <Fab\n          variant=\"extended\"\n          size=\"medium\"\n          color=\"primary\"\n          aria-label=\"add\"\n          style={{\n            position: \"fixed\",\n            right: \"15px\",\n            bottom: \"60px\",\n            width: \"100px\"\n          }}\n          onClick={submitContent}\n        >\n          <NavigationIcon />\n          发布\n        </Fab>\n      </Typography>\n\n      <Modal\n        open={open}\n        className=\"editor-modal\"\n        onClose={() => setOpen(false)}\n      >\n        <div className=\"blank-body\">\n          <h2 id=\"simple-modal-title\">发布文章</h2>\n          <div id=\"simple-modal-description\">\n            <h4>标签选择</h4>\n            {taglist &&\n              taglist.map(tag => {\n                return (\n                  <Button\n                    size=\"small\"\n                    variant={tagIndex === tag.id ? \"contained\" : \"outlined\"}\n                    color=\"primary\"\n                    component=\"span\"\n                    onClick={() => {\n                      setIndex(index);\n                    }}\n                  >\n                    {tag.tagname}\n                  </Button>\n                );\n              })}\n\n            <div className=\"draft\">\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    checked={checked}\n                    onChange={() => {\n                      setChecked(!checked);\n                    }}\n                    value=\"0\"\n                  />\n                }\n                label=\"保存为草稿\"\n              />\n            </div>\n          </div>\n          <div className=\"footer\">\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => setOpen(false)}\n            >\n              取消\n            </Button>\n            <Button variant=\"contained\" onClick={submitArticle} color=\"primary\">\n              确认并保存\n            </Button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}