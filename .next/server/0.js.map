{"version":3,"file":"0.js","sources":["webpack:///./components/bf-editor.js","webpack:///./public/js/nextFetch.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Router from \"next/router\";\nimport {\n  Typography,\n  TextField,\n  Fab,\n  Button,\n  FormControlLabel,\n  Checkbox,\n  Modal\n} from \"@material-ui/core\";\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\nimport fetch from \"../public/js/nextFetch\";\nimport BraftEditor from \"braft-editor\";\nimport jsCookie from \"js-cookie\";\nimport \"braft-editor/dist/index.css\";\nimport \"../public/css/editor.less\";\n\nexport default function BfEditor(props) {\n  const { entry, postId } = props;\n  const user = JSON.parse(jsCookie.get(\"userlogin\") || null);\n  const [title, setTitle] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [taglist, setTag] = useState(null);\n  const [tagObj, settagObj] = useState({});\n  const [checked, setChecked] = React.useState(false);\n  const [editorState, setEditor] = useState(\n    BraftEditor.createEditorState(null)\n  );\n\n  useEffect(() => {\n    if (!user) {\n      Router.push({\n        pathname: \"/admin/login\"\n      });\n      return;\n    }\n    if (entry === \"userinfo\") {\n      fetchUser();\n    } else {\n      fetchTag();\n    }\n  }, []);\n\n  const submitContent = async () => {\n    if (user && entry === \"userinfo\") {\n      let result = await fetch({\n        url: \"user/resume\",\n        method: \"PUT\",\n        query: {\n          userId: user.id,\n          content: editorState\n        }\n      });\n      if (result.code == 200) {\n        alert(\"发布成功！\");\n      }\n    } else {\n      setOpen(true);\n    }\n  };\n\n  const submitArticle = async () => {\n    if (!title || !editorState) {\n      alert(\"标题或内容不能为空！\");\n      return;\n    }\n    let params = {\n      title,\n      tagname: tagObj[\"tagname\"],\n      tagid: tagObj[\"id\"],\n      isPublic: checked ? \"0\" : \"1\",\n      uid: user.id,\n      content: editorState\n    };\n    if (postId) {\n      // 修改文章\n      params.id = postId;\n      let result = await fetch({\n        url: `post/${postId}`,\n        method: \"put\",\n        query: params\n      });\n\n      console.log(\"this-result\", result);\n\n      if (result.code != 200) {\n        return alert(result[\"message\"]);\n      }\n      setOpen(false);\n      alert(\"更新成功！\");\n      Router.push({\n        pathname: \"/admin/index\"\n      });\n    } else {\n      // 写文章\n      let result = await fetch({\n        url: \"post\",\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\"\n        },\n        query: params\n      });\n      if (result.code != 200) {\n        return alert(result[\"message\"]);\n      }\n      setOpen(false);\n      alert(\"发布成功！\");\n      Router.push({\n        pathname: \"/admin/index\"\n      });\n    }\n  };\n\n  async function fetchTag() {\n    const res = await fetch(\"tag\");\n    if (res.code === 200) {\n      setTag(res.data);\n      settagObj(res.data[0]);\n    }\n    if (postId && Number(postId) > 0) {\n      let lastArticle = await fetch(`post/${postId}`);\n      lastArticle = lastArticle.data[0];\n      setTitle(lastArticle[\"title\"]);\n      setEditor(BraftEditor.createEditorState(lastArticle[\"content\"]));\n      setChecked(lastArticle[\"isPublic\"]);\n      let flag = res.data.filter(item => {\n        return item.id === lastArticle[\"tagid\"];\n      });\n      settagObj(flag[0]);\n    }\n  }\n\n  async function fetchUser() {\n    const res = await fetch(`user/resume?userId=${user.id}`);\n    if (res.code === 200) {\n      setEditor(BraftEditor.createEditorState(res.data[0][\"content\"]));\n    }\n  }\n\n  return (\n    <div className=\"editor\">\n      <Typography\n        component=\"div\"\n        style={{\n          height: \"100vh\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexDirection: \"column\",\n          backgroundColor: \"#21242a\"\n        }}\n      >\n        <BraftEditor\n          className=\"editor-main\"\n          value={editorState}\n          onChange={e => setEditor(e.toHTML())}\n          onSave={submitContent}\n          placeholder=\"输入正文...\"\n          componentBelowControlBar={\n            entry === \"article\" ? (\n              <TextField\n                fullWidth\n                autoComplete=\"off\"\n                size=\"medium\"\n                id=\"standard-basic\"\n                label=\"输入标题...\"\n                className=\"bf-title\"\n                value={title}\n                onChange={e => setTitle(e.target.value)}\n              />\n            ) : null\n          }\n        />\n\n        <Fab\n          variant=\"extended\"\n          size=\"medium\"\n          color=\"primary\"\n          aria-label=\"add\"\n          style={{\n            position: \"fixed\",\n            right: \"15px\",\n            bottom: \"60px\",\n            width: \"100px\"\n          }}\n          onClick={submitContent}\n        >\n          <NavigationIcon />\n          发布\n        </Fab>\n      </Typography>\n\n      <Modal\n        open={open}\n        className=\"editor-modal\"\n        onClose={() => setOpen(false)}\n      >\n        <div className=\"blank-body\">\n          <h2 id=\"simple-modal-title\">发布文章</h2>\n          <div id=\"simple-modal-description\">\n            <h4>标签选择</h4>\n            {taglist &&\n              taglist.map(tag => {\n                return (\n                  <Button\n                    size=\"small\"\n                    variant={tagObj.id === tag.id ? \"contained\" : \"outlined\"}\n                    color=\"primary\"\n                    component=\"span\"\n                    onClick={() => {\n                      settagObj(tag);\n                    }}\n                  >\n                    {tag.tagname}\n                  </Button>\n                );\n              })}\n\n            <div className=\"draft\">\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    checked={checked}\n                    onChange={() => {\n                      setChecked(!checked);\n                    }}\n                    value=\"0\"\n                  />\n                }\n                label=\"保存为草稿\"\n              />\n            </div>\n          </div>\n          <div className=\"footer\">\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => setOpen(false)}\n            >\n              取消\n            </Button>\n            <Button variant=\"contained\" onClick={submitArticle} color=\"primary\">\n              确认并保存\n            </Button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import fetch from \"isomorphic-unfetch\";\nimport qs from \"query-string\";\n\nconst defaultOptions = {\n  basiclUrl: \"http://api.boxser.cn/\",\n  method: \"get\",\n  headers: {\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    Accept: \"application/json\"\n  },\n  timeout: 6000\n};\n\nif (process.env.NODE_ENV === \"development\") {\n  defaultOptions[\"basiclUrl\"] = \"http://127.0.0.1:8080/\";\n}\n\n// ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PATCH', 'PUT']\n\nconst nextFetch = options => {\n  let [opts, method, requestUrl] = [null, \"get\", null];\n  opts = Object.assign({}, defaultOptions, options || {});\n  method = opts.method.toLowerCase();\n  requestUrl = opts.basiclUrl;\n  requestUrl += opts.url;\n\n  if (typeof options === \"string\") {\n    requestUrl = defaultOptions[\"basiclUrl\"] + options;\n  }\n  if (method !== \"get\" && method !== \"put\") {\n    opts.body = qs.stringify(opts.query);\n  }\n\n  return fetch(requestUrl, opts)\n    .then(r => r.json())\n    .then(result => {\n      return result;\n    });\n};\n\nexport default nextFetch;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AANA;AACA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5PA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AARA;AACA;AAUA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}